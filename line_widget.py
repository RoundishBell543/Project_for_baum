# Form implementation generated from reading ui file 'line_widget.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from PyQt6.QtWidgets import QApplication, QWidget
from PyQt6 import QtCore, QtGui, QtWidgets
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
import numpy as np
import sympy  as sp

class Ui_widget_1(QWidget):
    def __init__(self):
        super().__init__()
        self.setupUi(self)

    def setupUi(self, widget_1):
        widget_1.setObjectName("widget_1")
        widget_1.resize(784, 576)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(parent=widget_1)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(0, 10, 781, 161))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(parent=self.verticalLayoutWidget_2)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.lineEdit_2 = QtWidgets.QLineEdit(parent=self.verticalLayoutWidget_2)
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout_2.addWidget(self.lineEdit_2)
        self.lineEdit = QtWidgets.QLineEdit(parent=self.verticalLayoutWidget_2)
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_2.addWidget(self.lineEdit)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_2 = QtWidgets.QLabel(parent=self.verticalLayoutWidget_2)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.lineEdit_4 = QtWidgets.QLineEdit(parent=self.verticalLayoutWidget_2)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.horizontalLayout.addWidget(self.lineEdit_4)
        self.lineEdit_3 = QtWidgets.QLineEdit(parent=self.verticalLayoutWidget_2)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.horizontalLayout.addWidget(self.lineEdit_3)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.pushButton = QtWidgets.QPushButton(parent=self.verticalLayoutWidget_2)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout_2.addWidget(self.pushButton)

        self.retranslateUi(widget_1)
        QtCore.QMetaObject.connectSlotsByName(widget_1)

    def retranslateUi(self, widget_1):
        _translate = QtCore.QCoreApplication.translate
        widget_1.setWindowTitle(_translate("widget_1", "Построение линеной функции"))
        self.label.setText(_translate("widget_1", "Функция:"))
        self.lineEdit_2.setPlaceholderText(_translate("widget_1", "Ввдите коэффицент k"))
        self.lineEdit.setPlaceholderText(_translate("widget_1", "Введите свободный член b"))
        self.label_2.setText(_translate("widget_1", "Диапазон:"))
        self.lineEdit_4.setPlaceholderText(_translate("widget_1", "Начало "))
        self.lineEdit_3.setPlaceholderText(_translate("widget_1", "Конец"))
        self.pushButton.setText(_translate("widget_1", "Построить график"))

    def initUi(self):
        self.figure = Figure()
        self.canvas = FigureCanvas(self.figure)
        self.verticalLayout_2.addWidget(self.canvas)

        self.pushButton.clicked.connect(self.plot_linear_function)


    def plot_linear_function(self):
        k = float(self.lineEdit.text())
        b = float(self.lineEdit_2.text())
        start = float(self.lineEdit_3.text())
        end = float(self.lineEdit_4.text())

        x = sp.symbols('x')
        linear_function = k * x + b

        x_vals = np.linspace(start, end, 400)
        y_vals = [linear_function.subs(x, val) for val in x_vals]

        self.figure.clear()

        ax = self.figure.add_subplot(111)
        ax.plot(x_vals, y_vals, label=f'y = {k}x + {b}')
        ax.set_xlabel('x')
        ax.set_ylabel('y')
        ax.legend()
        ax.grid(True)

        # Обновление canvas
        self.canvas.draw()


if __name__ == '__main__':
    app = QApplication(sys.argv)
    window = Ui_widget_1()
    window.show()
    sys.exit(app.exec())